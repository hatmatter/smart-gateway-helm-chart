SignalFx Smart Gateway
======================

{{ template "chart.description" . }}


{{ template "chart.versionLine" . }}

## Quick Start

This helm chart deploys a SignalFx Smart Gateway cluster. It requires an existing etcd cluster
for the gateway nodes to connect to.

### Setup an etcd cluster

- Install the [etcd-operator](https://github.com/coreos/etcd-operator) helm [chart](https://github.com/helm/charts/tree/master/stable/etcd-operator) and configure the chart to setup RBAC resources for the operator

`$ helm install --name etcd-operator  --set customResources.createEtcdClusterCRD=true,customResources.createBackupCRD=true,customResources.createRestoreCRD=true stable/etcd-operator`

- Update the chart to enable the cluster.  `cluster.enabled` is ignored on install.

`$ helm upgrade --set cluster.enabled=true etcd-operator stable/etcd-operator`

### Build the SignalFx Smart Gateway Image

Before installing the helm chart, a SignalFx Smart Gateway image must be generated.

1. [Download the SignalFx Smart Gateway binary](https://docs.signalfx.com/en/latest/apm/apm-deployment/smart-gateway.html#downloading-a-specific-version-of-the-smart-gateway)
2. [Use the documented dockerfile to build the image](https://docs.signalfx.com/en/latest/apm/apm-deployment/smart-gateway.html#building-a-docker-image)
3. Place the image in a registry accessible to the Kubernetes cluster where the helm chart will be installed.

### Install the helm chart

To use this chart with Helm, add our SignalFx Helm chart repository to Helm
like this:

`$ helm repo add signalfx https://dl.signalfx.com/helm-repo`

Then to ensure the latest state of the repository, run:

`$ helm repo update`

Then you can install the gateway using the chart name `signalfx/signalfx-smart-gateway`.

Be sure to set values for:
- signalFxAccessToken
- clusterName
- targetClusterAddresses
- image.tag (using `latest` is not recommended)

`
$ helm install signalfx/signalfx-smart-gateway
--set image.tag=<YOUR_SMART_GATEWAY_TAG>
--set signalFxAccessToken=<YOUR_ACCESS_TOKEN>
--set clusterName=<YOUR_CLUSTER_NAME>
--set targetClusterAddresses[0]=<YOUR_ETCD_CLUSTER_CLIENT_ADDRESS>
--set distributor.count=3
--set gateway.count=3
`

A service will be created to forward requests to port 18080 on to the gateways' or the distributors' SignalFx Listener.

## About This Chart

This chart deploys a cluster of SignalFx Smart Gateways and optionally deploys a SignalFx Smart Gateway Distributor layer infront of the SignalFx Smart Gateways.  This chart will also create a service definition infront of the Smart Gateways or the Distributor layer.

### Important Configurations
Before proceeding, it is recommended that you look at the [values.yaml](./values.yaml) file included with the helm chart.  There are two keys `gateway` and `distributor` each represents specific configurations about the SignalFx Smart Gateways and the SignalFx Smart Gateway Distributors.  

For convenience, there are a few top level configurations in the values.yaml to insert and configure Forwarders 
and Listeners for the Smart Gateway. 

#### ClusterName
The SignalFx Smart Gateway and SignalFx Smart Gateway Distributors must all use the same cluster name.  As a convenience
There is a top level configuration called `clusterName`.  It will be inserted into `gateway.conf.ClusterName` and
`distributor.conf.ClusterName`.  You can override this global configuration by directly setting gateway.conf.ClusterName
and `distributor.conf.ClusterName`.

#### Listeners
The `listeners` configuration is a list of SignalFx Smart Gateway Listener configuration JSON objects. These listeners 
will be merged into the values.yaml lists `gateway.conf.ListenFrom` and `distributor.conf.ForwardTo`. There is a default 
SignalFx Listener configuration stored in `listeners[0]` and it is configured to listen on port 18080. Please refer to 
the Listener [documentation](https://github.com/signalfx/integrations/tree/master/gateway#listenfrom) for more 
information about Listeners.

#### Forwarders
The `forwarders` configuration is a list of SiganlFx Smart Gateway Forwarders configuration JSON objects.  These
forwarders will be merged into the values.yaml list `gateway.conf.ForwardTo` and `distributor.conf.ForwardTo`.  Unlike
`listeners`, there are default SignalFx Forwarder configurations stored in `gateway.conf.ForwardTo[0]` and
`gateway.conf.ForwardTo[0]`.  This is because the forwarders are configured slightly differently between the
gateway and distributor forwarders.

#### Target Cluster Addresses
The `targetClusterAddresses` configuration is a list of etcd client addresses for the gateways and distributors to
connect to etcd.  This configuration is merged with the list `gateway.conf.TargetClusterAddresses` and 
`distributor.conf.TargetClusterAddresses`.

#### gateway.conf and distributor.conf
You'll notice that there are configurations called `gateway.conf` and `distributor.conf` they are JSON config objects representing
plain SignalFx Smart Gateway config.  They are passed in directly and so additional gateway/distributor configurations that are not
in the values.yaml can be set by directly specifying the path through these objects.  Please refer to the 
[SignalFx Smart Gateway Deployment Guide](https://docs.signalfx.com/en/latest/apm/apm-deployment/smart-gateway.html#install-and-configure-the-smart-gateway)
for more information about configurations for the gateway.  Please note that `listeners`, `forwarders`, and `targetClusterAddresses`
will be merged into their corresponding fields in `gateway.conf` and `distributor.conf`.

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}